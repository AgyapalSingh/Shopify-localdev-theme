<div
  class="custom-responsive-tabs-collection-wrapper color-{{ section.settings.color_scheme }} gradient"
  style="padding-top: {{ section.settings.padding_top }}px; padding-bottom: {{ section.settings.padding_bottom }}px;"
>
  {% if section.blocks.size > 0 %}
    <div class="tabs-nav">
      {% for block in section.blocks %}
        <button
          type="button"
          class="tab-button {% if forloop.first %}active{% endif %}"
          data-tab="tab-{{ block.id }}"
        >
          {{ block.settings['tabs-collection-title'] }}
        </button>
      {% endfor %}
    </div>

    <div class="tabs-content">
      {% for block in section.blocks %}
        <div class="tab-panel {% if forloop.first %}active{% endif %}" id="tab-{{ block.id }}">
          {% assign collection = block.settings['tabs-collection-content'] %}
          {% if collection.products.size > 0 %}
            <div class="products-grid">
              {% for product in collection.products limit: 8 %}
                <div class="product-card">
                  <a href="{{ product.url }}">
                    <img src="{{ product.featured_image | img_url: '400x' }}" alt="{{ product.title }}">
                    <h4>{{ product.title }}</h4>
                    <span>{{ product.price | money }}</span>
                  </a>
                </div>
              {% endfor %}
            </div>
          {% else %}
            <p>No products found in this collection.</p>
          {% endif %}
        </div>
      {% endfor %}
    </div>
  {% endif %}
</div>

{% schema %}
{
  "name": "Tabs for Collection",
  "tag": "section",
  "class": "ag-responsive-tabs-collection",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 40
    }
  ],
  "blocks": [
    {
      "name": "Add Tabs Item",
      "type": "tabs-collection-items",
      "limit": 5,
      "settings": [
        {
          "type": "text",
          "id": "tabs-collection-title",
          "label": "Tab Title",
          "default": "Sample Tabs Title"
        },
        {
          "type": "collection",
          "id": "tabs-collection-content",
          "label": "Select Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Responsive Tabs Collection | Aujla",
      "blocks": []
    }
  ]
}
{% endschema %}

<style>
  .tabs-nav {
    display: flex;
    gap: 12px;
    justify-content: center;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
  }

  .tab-button {
    padding: 8px 20px;
    border: none;
    background-color: #f2f2f2;
    cursor: pointer;
    border-radius: 20px;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .tab-button.active {
    background-color: #000;
    color: #fff;
  }

  .tabs-content .tab-panel {
    display: none;
  }

  .tabs-content .tab-panel.active {
    display: block;
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 20px;
    margin-top: 1rem;
  }

  .product-card {
    text-align: center;
    padding: 10px;
    border: 1px solid #eee;
    border-radius: 10px;
    transition: box-shadow 0.3s ease;
  }

  .product-card:hover {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
  }

  .product-card img {
    max-width: 100%;
    border-radius: 8px;
  }

  .product-card h4 {
    font-size: 1rem;
    margin: 8px 0 4px;
  }

  .product-card span {
    font-size: 0.9rem;
    color: #666;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabPanels = document.querySelectorAll('.tab-panel');

    tabButtons.forEach((button) => {
      button.addEventListener('click', () => {
        // Remove active classes
        tabButtons.forEach((btn) => btn.classList.remove('active'));
        tabPanels.forEach((panel) => panel.classList.remove('active'));

        // Add active to clicked
        button.classList.add('active');
        const target = button.getAttribute('data-tab');
        document.getElementById(target).classList.add('active');
      });
    });
  });
</script>
